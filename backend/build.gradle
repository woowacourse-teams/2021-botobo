plugins {
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'botobo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // test
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'

    // lombok
    implementation 'org.projectlombok:lombok'

    // database
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // restdocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // lombok
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // log
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task createDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/asciidoc/html5/index.html")
    into file("src/main/resources/static/docs")
}

task copyDev(type: Copy) {
    from '../dev/application-prod.yml'
    into './src/main/resources'
    
    from '../dev/application-dev.yml'
    into './src/main/resources'
    
    from '../dev/application-local.yml'
    into './src/main/resources'
    
    from '../dev/application-test.yml'
    into './src/main/resources'
}

build {
    dependsOn copyDev
    dependsOn createDocument
}
